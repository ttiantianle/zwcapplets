<style lang="less">
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
  page{
    min-height: 100%;
    background: #F1F4FD;
    font-size: 28rpx;
    padding-bottom: 120rpx;
    box-sizing: border-box;
  }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
// import "/pages/wxParse/wxParse.wxss";
export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',//授权页面
      'pages/main',//主页面 首页
      'pages/card/addCard',     //添加名片
      'pages/shop/shopDetail', //机构详情
      'pages/shop/shopPicture',//机构相册
      'pages/shop/shopDevice', //仪器设备
      'pages/demand/demandDetails',
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#000',
      navigationBarTitleText: '',
      navigationBarTextStyle: 'white',
    },
    // tabBar: {    //
    //   color: '#AEADAD',
    //   selectedColor: '#049BFF',
    //   backgroundColor: '#fff',
    //   borderStyle: 'black',
    //   list: [{
    //     pagePath: 'pages/index',
    //     selectedIconPath: './images/tabbars/icon-mark-active@2x.png',
    //     iconPath: './images/tabbars/icon-mark@2x.png',
    //     text: '首页'
    //   }, {
    //     pagePath: 'pages/borrow',
    //     selectedIconPath: './images/tabbars/icon-shelf-active@2x.png',
    //     iconPath: './images/tabbars/icon-shelf@2x.png',
    //     text: '借阅'
    //   }, {
    //     pagePath: 'pages/user',
    //     selectedIconPath: './images/tabbars/icon-smile-active@2x.png',
    //     iconPath: './images/tabbars/icon-smile@2x.png',
    //     text: '我的'
    //   }]
    // },

  };
    globalData = {
      // userInfo: null,
      url: "https://zwcap.zhaowoce.com:4433",
      img: "https://img.zhaowoce.com/",
      Authorization:false,
      uploadUrl:"http://zwcap.zhaowoce.com:8090/shop/uploadimg?id=",
      phoneNumber:"",
      shopId:"",
      userId: "",
    };
    constructor () {
      super();
      this.use('requestfix')//修复小程序请求并发问题
      // this.use('promisify');//使用wepy.xxx的方式请求小程序原生API都将Promise化
    }

    onLaunch() {

    }

    sleep (s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    }

    async testAsync () {
      const data = await this.sleep(3)
      // console.log(data)
    }

    getUserInfo(cb) {
      const that = this;
      if (this.globalData.userInfo) {
        return this.globalData.userInfo
      }
      wepy.getUserInfo({
        success (res) {
          that.globalData.userInfo = res.userInfo;
          cb && cb(res.userInfo)
        }
      })
    }
  }
</script>
